<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>YOLO on SwimmingLiu&#39;s Blog</title>
    <link>https://swimmingliu.cn/tags/yolo/</link>
    <description>Recent content in YOLO on SwimmingLiu&#39;s Blog</description>
    <image>
      <title>SwimmingLiu&#39;s Blog</title>
      <url>https://swimmingliu.cn/papermod-cover.png</url>
      <link>https://swimmingliu.cn/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Aug 2024 10:35:06 +0800</lastBuildDate>
    <atom:link href="https://swimmingliu.cn/tags/yolo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>YOLOv9: Learning What You Want to Learn Using Programmable Gradient Information</title>
      <link>https://swimmingliu.cn/posts/papernotes/2024-yolov9/</link>
      <pubDate>Fri, 01 Mar 2024 15:26:23 +0800</pubDate>
      <guid>https://swimmingliu.cn/posts/papernotes/2024-yolov9/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;如今的深度学习方法主要关注如何设计&lt;strong&gt;最合适的目标函数&lt;/strong&gt;，使模型的预测结果能够最接近真实情况。同时，必须设计一个&lt;strong&gt;适当的架构&lt;/strong&gt;，可以帮助&lt;strong&gt;获取足够的信息进行预测&lt;/strong&gt;。现有方法忽略了一个事实，即&lt;strong&gt;当输入数据经过逐层特征提取和空间变换时&lt;/strong&gt;，&lt;strong&gt;大量信息将会丢失&lt;/strong&gt;。本文将深入研究数据通过&lt;strong&gt;深度网络传输时数据丢失的重要问题&lt;/strong&gt;，即&lt;strong&gt;信息瓶颈和可逆函数&lt;/strong&gt;。我们提出了&lt;strong&gt;可编程梯度信息（PGI）&lt;strong&gt;的概念来应对深度网络实现&lt;/strong&gt;多个目标所需的各种变化&lt;/strong&gt;。
PGI可以为&lt;strong&gt;目标任务计算目标函数&lt;/strong&gt;提供&lt;strong&gt;完整的输入信息&lt;/strong&gt;，从而获得&lt;strong&gt;可靠的梯度信息来更新网络权值&lt;/strong&gt;。此外，还设计了一种基于&lt;strong&gt;梯度路径规划的新型轻量级网络架构&lt;/strong&gt;——&lt;strong&gt;通用高效层聚合网络（GELAN）&lt;/strong&gt;。GELAN的架构证实了PGI在轻量级模型上取得了优异的结果。我们在基于 MS COCO 数据集的目标检测上验证了所提出的 GELAN 和 PGI。结果表明，与基于深度卷积开发的最先进方法相比，GELAN 仅使用&lt;strong&gt;传统的卷积算子&lt;/strong&gt;即可实现更好的参数利用率。 PGI 可用于从轻型到大型的各种模型。它可以用来获取完整的信息，使得&lt;strong&gt;train-from-scratch (从零开始训练) 模型能够比使用大数据集预训练&lt;/strong&gt;的state-of-theart模型获得更好的结果，对比结果如图1所示。源代码位于：https： //github.com/WongKinYiu/yolov9。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;核心创新点:  依然是网络结构的创新&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Programmable Gradient Information (PGI)&lt;/li&gt;
&lt;li&gt;Generalized Efficient Layer Aggregation Network（GELAN）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://oss.swimmingliu.cn/f6b3ea45-d79d-11ee-a66b-c858c0c1debd&#34; alt=&#34;image-20240301113226341&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;基于深度学习的模型在计算机视觉、语言处理和语音识别等各个领域都表现出了比过去的人工智能系统更好的性能。近年来，深度学习领域的研究人员主要关注如何开发更强大的系统架构和学习方法，例如CNN，Transformers[8,9,40] 、41、60、69、70]，Perceivers[26、26、32、52、56、81、81]和Mambas[17、38、80]。此外，一些研究人员尝试开发更通用的目标函数，例如损失函数[5,45,46,50,77,78]，标签分配[10,12,33,67,79]和辅助监督[18] 、20、24、28、29、51、54、68、76]。上述研究都试图精确地找到&lt;strong&gt;输入和目标任务之间的映射&lt;/strong&gt;。然而，大多数过去的方法都忽略了&lt;strong&gt;输入数据在前馈过程中可能会产生不可忽略的信息丢失量&lt;/strong&gt;。这种&lt;strong&gt;信息丢失&lt;/strong&gt;可能会导致&lt;strong&gt;有偏差的梯度流&lt;/strong&gt;，随后用于更新模型。上述问题可能导致深度网络&lt;strong&gt;在目标和输入之间建立不正确的关联&lt;/strong&gt;，导致训练后的模型产生不正确的预测。&lt;/p&gt;
&lt;p&gt;在深度网络中，&lt;strong&gt;输入数据在前馈过程中丢失信息的现象&lt;/strong&gt;俗称&lt;strong&gt;信息瓶颈&lt;/strong&gt;[59]，其示意图如图2所示。目前可以缓解这种现象的主要方法有：（1）&lt;strong&gt;可逆架构&lt;/strong&gt;的使用[3,16,19]：该方法主要&lt;strong&gt;使用重复的输入数据，并以显式的方式维护输入数据的信息&lt;/strong&gt;； （2）使用&lt;strong&gt;Masked建模&lt;/strong&gt;[1,6,9,27,71,73]：主要利用重构损失，采用&lt;strong&gt;隐式方式最大化提取特征并保留输入信息&lt;/strong&gt;； （3）引入&lt;strong&gt;深度监督&lt;/strong&gt;概念[28,51,54,68]：它利用&lt;strong&gt;没有丢失太多重要信息的浅层特征来预先建立从特征到目标的映射&lt;/strong&gt;，以确保&lt;strong&gt;重要信息能够被传递到更深的层次&lt;/strong&gt;。然而，上述方法在训练过程和推理过程中都存在不同的缺点。例如，&lt;strong&gt;可逆架构需要额外的层来组合重复馈送的输入数据&lt;/strong&gt;，这将显着增加推理成本。另外，由于&lt;strong&gt;输入数据层到输出层不能有太深的路径&lt;/strong&gt;，这种限制将导致&lt;strong&gt;在训练过程中难以对高阶语义信息进行建模&lt;/strong&gt;。对于 &lt;strong&gt;Masked 建模&lt;/strong&gt;，其&lt;strong&gt;重建损失有时与目标损失相冲突&lt;/strong&gt;。此外，大多数&lt;strong&gt;掩码机制还会产生与数据的不正确关联&lt;/strong&gt;。 对于&lt;strong&gt;深层监督&lt;/strong&gt;机制来说，会产生&lt;strong&gt;误差累积&lt;/strong&gt;，如果&lt;strong&gt;浅层监督在训练过程中丢失信息&lt;/strong&gt;，&lt;strong&gt;后续层将无法检索到所需信息&lt;/strong&gt;。上述现象在&lt;strong&gt;困难任务&lt;/strong&gt;和&lt;strong&gt;小模型上&lt;/strong&gt;会更加&lt;strong&gt;显着&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;针对上述问题，我们提出了一个新的概念，即&lt;strong&gt;可编程梯度信息（PGI）&lt;/strong&gt;。其概念是通过&lt;strong&gt;辅助可逆分支生成可靠的梯度&lt;/strong&gt;，使得&lt;strong&gt;深层特征仍然能够保持执行目标任务的关键特征&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;辅助可逆分支的设计&lt;/strong&gt;可以避免传统的&lt;strong&gt;融合多路径特征的深度监督过程&lt;/strong&gt;可能造成的&lt;strong&gt;语义损失&lt;/strong&gt;。换句话说，我们在&lt;strong&gt;不同语义层面上编程梯度信息传播&lt;/strong&gt;，从而达到最佳的训练结果。 PGI的&lt;strong&gt;可逆架构建立在辅助分支上&lt;/strong&gt;，因此&lt;strong&gt;没有额外的成本&lt;/strong&gt;。由于PGI可以&lt;strong&gt;自由选择适合目标任务的损失函数&lt;/strong&gt;，因此也克服了&lt;strong&gt;Masked建模&lt;/strong&gt;遇到的问题。所提出的&lt;strong&gt;PGI机制&lt;/strong&gt;可以应用于各种规模的&lt;strong&gt;深度神经网络&lt;/strong&gt;，并且比仅适用于&lt;strong&gt;非常深的神经网络&lt;/strong&gt;的&lt;strong&gt;深度监督机制更通用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在本文中，我们还基于ELAN[65]设计了&lt;strong&gt;广义ELAN（GELAN）&lt;/strong&gt;，GELAN的设计同时&lt;strong&gt;考虑了参数量、计算复杂度、准确性和推理速度&lt;/strong&gt;。这种设计允许用户&lt;strong&gt;针对不同的推理设备任意选择合适的计算块&lt;/strong&gt;。我们将提出的PGI和GELAN结合起来，然后设计了新一代YOLO系列物体检测系统，我们称之为YOLOv9。我们使用MS COCO数据集进行实验，实验结果验证了我们提出的YOLOv9在所有比较中都取得了顶尖的性能。&lt;/p&gt;
&lt;p&gt;我们总结本文的贡献如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;我们从&lt;strong&gt;可逆函数的角度&lt;/strong&gt;对&lt;strong&gt;现有的深度神经网络架构进行了理论分析&lt;/strong&gt;，通过这个过程&lt;strong&gt;我们成功地解释了许多过去难以解释的现象&lt;/strong&gt;。我们还基于此分析&lt;strong&gt;设计了PGI和辅助可逆分支&lt;/strong&gt;，并取得了优异的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我们设计的PGI解决了&lt;strong&gt;深度监督&lt;/strong&gt;只能用于&lt;strong&gt;极深的神经网络架构的问题&lt;/strong&gt;，从而让&lt;strong&gt;新的轻量级架构真正应用于日常生活中&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我们设计的GELAN仅使用&lt;strong&gt;常规卷积&lt;/strong&gt;来实现比基于最先进技术的&lt;strong&gt;深度卷积设计更高的参数利用率&lt;/strong&gt;，同时表现出&lt;strong&gt;轻、快速、准确&lt;/strong&gt;的巨大优势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结合所提出的PGI和GELAN，YOLOv9在MS COCO数据集上的目标检测性能在各个方面都大大超过了现有的实时目标检测器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Programmable Gradient Information (PGI)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;自由选择适合目标任务的损失函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可逆结构建立辅助分支，不增加推理成本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;适用于各种规模的深度神经网络&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GELAN：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;轻、快速、准确&lt;/li&gt;
&lt;li&gt;采用常规卷积吊打其他新颖卷积&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;related-work&#34;&gt;Related work&lt;/h2&gt;
&lt;h3 id=&#34;21-real-time-object-detectors&#34;&gt;2.1 Real-time Object Detectors&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;目前主流的实时目标检测器是YOLO系列[2,7,13–15,25,30,31,47–49,61–63,74,75]，这些模型大多数使用CSPNet[64]或 ELAN [65] 及其变体作为主要计算单元。在特征集成方面，通常使用改进的PAN[37]或FPN[35]作为工具，然后使用改进的YOLOv3头[49]或FCOS头[57, 58]作为预测头。最近也提出了一些实时目标检测器，例如 RT DETR [43]，其基础是 DETR [4]。然而，由于DETR系列目标检测器在没有相应领域预训练模型的情况下很难应用于新领域，因此目前应用最广泛的实时目标检测器仍然是YOLO系列。本文选择 YOLOv7 [63] 作为开发该方法的基础，该方法已在各种计算机视觉任务和各种场景中被证明有效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>YOLOSHOW - YOLOv5/YOLOv7/YOLOv8/YOLOv9/RTDETR GUI based on Pyside6</title>
      <link>https://swimmingliu.cn/posts/diary/yoloshow/</link>
      <pubDate>Sun, 18 Feb 2024 19:30:06 +0800</pubDate>
      <guid>https://swimmingliu.cn/posts/diary/yoloshow/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;YOLOSHOW&lt;/strong&gt;&lt;/em&gt; is a graphical user interface (GUI) application embed with&lt;code&gt;YOLOv5&lt;/code&gt; &lt;code&gt;YOLOv7&lt;/code&gt; &lt;code&gt;YOLOv8&lt;/code&gt; &lt;code&gt;YOLOv9&lt;/code&gt; &lt;code&gt;YOLOv10&lt;/code&gt; &lt;code&gt;RT-DETR&lt;/code&gt; algorithm.&lt;/p&gt;
 &lt;p align=&#34;center&#34;&gt; 
  English &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://github.com/SwimmingLiu/YOLOSHOW/blob/master/README_cn.md&#34;&gt;简体中文&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://oss.swimmingliu.cn/YOLOSHOW-SCREENSHOT.png&#34; alt=&#34;YOLOSHOW-Screen&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;demo-video&#34;&gt;Demo Video&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;YOLOSHOW v1.x&lt;/code&gt; : &lt;a href=&#34;https://www.bilibili.com/video/BV1BC411x7fW&#34;&gt;YOLOSHOW-YOLOv9/YOLOv8/YOLOv7/YOLOv5/RTDETR GUI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;YOLOSHOW v2.x&lt;/code&gt; : &lt;a href=&#34;https://www.bilibili.com/video/BV1ZD421E7m3&#34;&gt;YOLOSHOWv2.0-YOLOv9/YOLOv8/YOLOv7/YOLOv5/RTDETR GUI&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;todo-list&#34;&gt;Todo List&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add &lt;code&gt;YOLOv9&lt;/code&gt; Algorithm&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Adjust User Interface (Menu Bar)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Complete Rtsp Function&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Support Instance Segmentation （ &lt;code&gt;YOLOv5&lt;/code&gt; &amp;amp; &lt;code&gt;YOLOv8&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add &lt;code&gt;RT-DETR&lt;/code&gt; Algorithm ( &lt;code&gt;Ultralytics&lt;/code&gt; repo)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add Model Comparison Mode（VS Mode）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Support Pose Estimation （ &lt;code&gt;YOLOv8&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Support Http Protocol in Rtsp Function ( Single Mode )&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Support Oriented Bounding Boxes ( &lt;code&gt;YOLOv8&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add &lt;code&gt;YOLOv10&lt;/code&gt; Algorithm&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Support Dragging File Input&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Tracking &amp;amp; Counting ( &lt;code&gt;Industrialization&lt;/code&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;
&lt;h3 id=&#34;1-support-image--video--webcam--folder-batch--ipcam-object-detection&#34;&gt;1. Support Image / Video / Webcam / Folder (Batch) / IPCam Object Detection&lt;/h3&gt;
&lt;p&gt;Choose Image / Video / Webcam / Folder (Batch) / IPCam in the menu bar on the left to detect objects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>YOLOSHOW 中文版 - YOLOv5/YOLOv7/YOLOv8/YOLOv9/RTDETR GUI based on Pyside6</title>
      <link>https://swimmingliu.cn/posts/diary/yoloshow-cn/</link>
      <pubDate>Sun, 18 Feb 2024 19:30:06 +0800</pubDate>
      <guid>https://swimmingliu.cn/posts/diary/yoloshow-cn/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;YOLOSHOW&lt;/strong&gt;&lt;/em&gt; 是一款集合了 &lt;code&gt;YOLOv5&lt;/code&gt; &lt;code&gt;YOLOv7&lt;/code&gt; &lt;code&gt;YOLOv8&lt;/code&gt; &lt;code&gt;YOLOv9&lt;/code&gt;  &lt;code&gt;YOLOv10&lt;/code&gt; &lt;code&gt;RT-DETR&lt;/code&gt; 的图形化界面程序&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt; 
  &lt;a href=&#34;https://github.com/SwimmingLiu/YOLOSHOW/blob/master/README.md&#34;&gt; English&lt;/a&gt; &amp;nbsp; | &amp;nbsp; 简体中文&lt;/a&gt;
 &lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://oss.swimmingliu.cn/YOLOSHOW-SCREENSHOT.png&#34; alt=&#34;YOLOSHOW-Screen&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;演示视频&#34;&gt;演示视频&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;YOLOSHOW v1.x&lt;/code&gt; : &lt;a href=&#34;https://www.bilibili.com/video/BV1BC411x7fW&#34;&gt;YOLOSHOW-YOLOv9/YOLOv8/YOLOv7/YOLOv5/RTDETR GUI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;YOLOSHOW v2.x&lt;/code&gt; : &lt;a href=&#34;https://www.bilibili.com/video/BV1ZD421E7m3&#34;&gt;YOLOSHOWv2.0-YOLOv9/YOLOv8/YOLOv7/YOLOv5/RTDETR GUI&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;待做清单&#34;&gt;待做清单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 加入 &lt;code&gt;YOLOv9&lt;/code&gt; 算法&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 调整UI (菜单栏)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 完成Rtsp功能&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 支持实例分割 （ &lt;code&gt;YOLOv5&lt;/code&gt; &amp;amp; &lt;code&gt;YOLOv8&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 加入 &lt;code&gt;RT-DETR&lt;/code&gt; 算法 ( &lt;code&gt;Ultralytics&lt;/code&gt; 仓库)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 加入模型对比模式（VS Mode）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 支持姿态估计 （ &lt;code&gt;YOLOv8&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 支持 Http 协议 ( Single Mode )&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 支持旋转框 ( &lt;code&gt;YOLOv8&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 加入 &lt;code&gt;YOLOv10&lt;/code&gt; 算法&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 支持拖拽文件输入&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 追踪和计数模型 ( &lt;code&gt;工业化&lt;/code&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能&#34;&gt;功能&lt;/h2&gt;
&lt;h3 id=&#34;1-支持-图片--视频--摄像头--文件夹批量-网络摄像头-目标检测&#34;&gt;1. 支持 图片 / 视频 / 摄像头 / 文件夹（批量）/ 网络摄像头 目标检测&lt;/h3&gt;
&lt;p&gt;选择左侧菜单栏的图片 / 视频 / 摄像头 / 文件夹（批量）/ 网络摄像头 进行目标检测&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
